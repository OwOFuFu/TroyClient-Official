package com.md_4.troy.command.impl;

import java.util.Arrays;
import java.util.stream.Collectors;

import com.md_4.troy.Troy;
import com.md_4.troy.command.Command;
import com.md_4.troy.command.CommandInfo;
import com.md_4.troy.exception.CommandException;
import com.md_4.troy.exploit.Exploit;
import com.md_4.troy.exploit.argument.ArgumentParser;
import com.md_4.troy.helper.ChatHelper;
import com.md_4.troy.helper.ExecutorHelper;

@CommandInfo(
    alias = "crash",
    description = "Show or use available exploits",
    usage = "'crash <exploit/list/info> [exploit name / exploit arguments]",
    aliases = {"exploit", "lag"}
)
public class ExploitCommand extends Command {

  @Override
  public void execute(String... args) throws CommandException {
    if (args.length == 0) {
      throw new CommandException("&b • &bUsage: &3" + getUsage());
    }

    if (args[0].equalsIgnoreCase("list")) {

      ChatHelper.printMessage(
          "Available exploits: \n&b • &3" + Troy.INSTANCE.getExploitManager().getExploits().stream()
              .map(Exploit::getName).collect(Collectors.joining("\n&b • &3")));
    } else if (args[0].equalsIgnoreCase("info") && args.length > 1) {
      Exploit<?> exploit = Troy.INSTANCE.getExploitManager().getExploit(args[1])
          .orElseThrow(
              () -> new CommandException(String.format("&b • &bExploit \"&3%s\" &bnot found.\n&3", args[1])));

      ChatHelper.printMessage(
          String.format("&3%s&f: &b%s\n", exploit.getName(), exploit.getDescription()));

    } else {
      Exploit<?> exploit = Troy.INSTANCE.getExploitManager().getExploit(args[0])
          .orElseThrow(() -> new CommandException(
              "&b • &bExploit not found. Use \"&3'crash list\" &bto see all exploits."));

      Object[] arguments = ArgumentParser.parseArgs(exploit,
          Arrays.copyOfRange(args, 1, args.length)); //can't inline due to fucking error lol
      ExecutorHelper.submit(() -> exploit.execute(arguments));
    }
  }
}
